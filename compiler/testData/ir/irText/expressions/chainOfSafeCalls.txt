FILE fqName:<root> fileName:/chainOfSafeCalls.kt
  CLASS CLASS name:C modality:FINAL visibility:public flags:[] superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.C flags:[]
    CONSTRUCTOR visibility:public <> () returnType:<root>.C flags:[primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> () returnType:kotlin.Any flags:[primary]'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:C modality:FINAL visibility:public flags:[] superTypes:[kotlin.Any]'
    FUN name:foo visibility:public modality:FINAL <> ($this:<root>.C) returnType:<root>.C flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.C flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='FUN name:foo visibility:public modality:FINAL <> ($this:<root>.C) returnType:<root>.C flags:[]'
          GET_VAR 'VALUE_PARAMETER name:<this> type:<root>.C flags:[]' type=<root>.C origin=null
    FUN name:bar visibility:public modality:FINAL <> ($this:<root>.C) returnType:<root>.C? flags:[]
      $this: VALUE_PARAMETER name:<this> type:<root>.C flags:[]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='FUN name:bar visibility:public modality:FINAL <> ($this:<root>.C) returnType:<root>.C? flags:[]'
          GET_VAR 'VALUE_PARAMETER name:<this> type:<root>.C flags:[]' type=<root>.C origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
      VALUE_PARAMETER name:other index:0 type:kotlin.Any? flags:[]
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String flags:[]
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String flags:[]
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any flags:[]
  FUN name:test visibility:public modality:FINAL <> (nc:<root>.C?) returnType:<root>.C? flags:[]
    VALUE_PARAMETER name:nc index:0 type:<root>.C? flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='FUN name:test visibility:public modality:FINAL <> (nc:<root>.C?) returnType:<root>.C? flags:[]'
        BLOCK type=<root>.C? origin=SAFE_CALL
          VAR IR_TEMPORARY_VARIABLE name:tmp3_safe_receiver type:<root>.C? flags:[val]
            BLOCK type=<root>.C? origin=SAFE_CALL
              VAR IR_TEMPORARY_VARIABLE name:tmp2_safe_receiver type:<root>.C? flags:[val]
                BLOCK type=<root>.C? origin=SAFE_CALL
                  VAR IR_TEMPORARY_VARIABLE name:tmp1_safe_receiver type:<root>.C? flags:[val]
                    BLOCK type=<root>.C? origin=SAFE_CALL
                      VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<root>.C? flags:[val]
                        GET_VAR 'VALUE_PARAMETER name:nc index:0 type:<root>.C? flags:[]' type=<root>.C? origin=null
                      WHEN type=<root>.C? origin=null
                        BRANCH
                          if: CALL 'FUN IR_BUILTINS_STUB name:EQEQ visibility:public modality:FINAL <> (arg0:kotlin.Any?, arg1:kotlin.Any?) returnType:kotlin.Boolean flags:[]' type=kotlin.Boolean origin=EQEQ
                            arg0: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<root>.C? flags:[val]' type=<root>.C? origin=null
                            arg1: CONST Null type=kotlin.Nothing? value=null
                          then: CONST Null type=kotlin.Nothing? value=null
                        BRANCH
                          if: CONST Boolean type=kotlin.Boolean value=true
                          then: CALL 'FUN name:foo visibility:public modality:FINAL <> ($this:<root>.C) returnType:<root>.C flags:[]' type=<root>.C origin=null
                            $this: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<root>.C? flags:[val]' type=<root>.C? origin=null
                  WHEN type=<root>.C? origin=null
                    BRANCH
                      if: CALL 'FUN IR_BUILTINS_STUB name:EQEQ visibility:public modality:FINAL <> (arg0:kotlin.Any?, arg1:kotlin.Any?) returnType:kotlin.Boolean flags:[]' type=kotlin.Boolean origin=EQEQ
                        arg0: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp1_safe_receiver type:<root>.C? flags:[val]' type=<root>.C? origin=null
                        arg1: CONST Null type=kotlin.Nothing? value=null
                      then: CONST Null type=kotlin.Nothing? value=null
                    BRANCH
                      if: CONST Boolean type=kotlin.Boolean value=true
                      then: CALL 'FUN name:bar visibility:public modality:FINAL <> ($this:<root>.C) returnType:<root>.C? flags:[]' type=<root>.C? origin=null
                        $this: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp1_safe_receiver type:<root>.C? flags:[val]' type=<root>.C? origin=null
              WHEN type=<root>.C? origin=null
                BRANCH
                  if: CALL 'FUN IR_BUILTINS_STUB name:EQEQ visibility:public modality:FINAL <> (arg0:kotlin.Any?, arg1:kotlin.Any?) returnType:kotlin.Boolean flags:[]' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp2_safe_receiver type:<root>.C? flags:[val]' type=<root>.C? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: CONST Null type=kotlin.Nothing? value=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'FUN name:foo visibility:public modality:FINAL <> ($this:<root>.C) returnType:<root>.C flags:[]' type=<root>.C origin=null
                    $this: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp2_safe_receiver type:<root>.C? flags:[val]' type=<root>.C? origin=null
          WHEN type=<root>.C? origin=null
            BRANCH
              if: CALL 'FUN IR_BUILTINS_STUB name:EQEQ visibility:public modality:FINAL <> (arg0:kotlin.Any?, arg1:kotlin.Any?) returnType:kotlin.Boolean flags:[]' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp3_safe_receiver type:<root>.C? flags:[val]' type=<root>.C? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Nothing? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'FUN name:foo visibility:public modality:FINAL <> ($this:<root>.C) returnType:<root>.C flags:[]' type=<root>.C origin=null
                $this: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp3_safe_receiver type:<root>.C? flags:[val]' type=<root>.C? origin=null
