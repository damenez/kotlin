FILE fqName:<root> fileName:/kt27933.kt
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String flags:[]
    BLOCK_BODY
      VAR name:r type:kotlin.String flags:[var]
        CONST String type=kotlin.String value=""
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: CALL 'FUN IR_BUILTINS_STUB name:NOT visibility:public modality:FINAL <> (arg0:kotlin.Boolean) returnType:kotlin.Boolean flags:[]' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'FUN IR_BUILTINS_STUB name:EQEQ visibility:public modality:FINAL <> (arg0:kotlin.Any?, arg1:kotlin.Any?) returnType:kotlin.Boolean flags:[]' type=kotlin.Boolean origin=EXCLEQ
              arg0: GET_VAR 'VAR name:r type:kotlin.String flags:[var]' type=kotlin.String origin=null
              arg1: CONST String type=kotlin.String value=""
          then: BLOCK type=kotlin.Nothing origin=IF
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: SET_VAR 'VAR name:r type:kotlin.String flags:[var]' type=kotlin.Unit origin=PLUSEQ
            CALL 'FUN IR_EXTERNAL_DECLARATION_STUB name:plus visibility:public modality:FINAL <> ($this:kotlin.String, other:kotlin.Any?) returnType:kotlin.String flags:[]' type=kotlin.String origin=PLUSEQ
              $this: GET_VAR 'VAR name:r type:kotlin.String flags:[var]' type=kotlin.String origin=PLUSEQ
              other: CONST String type=kotlin.String value="O"
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: CALL 'FUN IR_BUILTINS_STUB name:EQEQ visibility:public modality:FINAL <> (arg0:kotlin.Any?, arg1:kotlin.Any?) returnType:kotlin.Boolean flags:[]' type=kotlin.Boolean origin=EQEQ
            arg0: GET_VAR 'VAR name:r type:kotlin.String flags:[var]' type=kotlin.String origin=null
            arg1: CONST String type=kotlin.String value="O"
          then: SET_VAR 'VAR name:r type:kotlin.String flags:[var]' type=kotlin.Unit origin=PLUSEQ
            CALL 'FUN IR_EXTERNAL_DECLARATION_STUB name:plus visibility:public modality:FINAL <> ($this:kotlin.String, other:kotlin.Any?) returnType:kotlin.String flags:[]' type=kotlin.String origin=PLUSEQ
              $this: GET_VAR 'VAR name:r type:kotlin.String flags:[var]' type=kotlin.String origin=PLUSEQ
              other: CONST String type=kotlin.String value="K"
      RETURN type=kotlin.Nothing from='FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String flags:[]'
        GET_VAR 'VAR name:r type:kotlin.String flags:[var]' type=kotlin.String origin=null
