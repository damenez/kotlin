FILE fqName:<root> fileName:/bangbang.kt
  FUN name:test1 visibility:public modality:FINAL <> (a:kotlin.Any?) returnType:kotlin.Any flags:[]
    VALUE_PARAMETER name:a index:0 type:kotlin.Any? flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='FUN name:test1 visibility:public modality:FINAL <> (a:kotlin.Any?) returnType:kotlin.Any flags:[]'
        BLOCK type=kotlin.Any origin=EXCLEXCL
          VAR IR_TEMPORARY_VARIABLE name:tmp0_notnull type:kotlin.Any? flags:[val]
            GET_VAR 'VALUE_PARAMETER name:a index:0 type:kotlin.Any? flags:[]' type=kotlin.Any? origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'FUN IR_BUILTINS_STUB name:EQEQ visibility:public modality:FINAL <> (arg0:kotlin.Any?, arg1:kotlin.Any?) returnType:kotlin.Boolean flags:[]' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp0_notnull type:kotlin.Any? flags:[val]' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CALL 'FUN IR_BUILTINS_STUB name:THROW_NPE visibility:public modality:FINAL <> () returnType:kotlin.Nothing flags:[]' type=kotlin.Nothing origin=EXCLEXCL
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp0_notnull type:kotlin.Any? flags:[val]' type=kotlin.Any? origin=null
  FUN name:test2 visibility:public modality:FINAL <> (a:kotlin.Any?) returnType:kotlin.Int flags:[]
    VALUE_PARAMETER name:a index:0 type:kotlin.Any? flags:[]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='FUN name:test2 visibility:public modality:FINAL <> (a:kotlin.Any?) returnType:kotlin.Int flags:[]'
        BLOCK type=kotlin.Int origin=EXCLEXCL
          VAR IR_TEMPORARY_VARIABLE name:tmp1_notnull type:kotlin.Int? flags:[val]
            BLOCK type=kotlin.Int? origin=SAFE_CALL
              VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.Any? flags:[val]
                GET_VAR 'VALUE_PARAMETER name:a index:0 type:kotlin.Any? flags:[]' type=kotlin.Any? origin=null
              WHEN type=kotlin.Int? origin=null
                BRANCH
                  if: CALL 'FUN IR_BUILTINS_STUB name:EQEQ visibility:public modality:FINAL <> (arg0:kotlin.Any?, arg1:kotlin.Any?) returnType:kotlin.Boolean flags:[]' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.Any? flags:[val]' type=kotlin.Any? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: CONST Null type=kotlin.Nothing? value=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int flags:[]' type=kotlin.Int origin=null
                    $this: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.Any? flags:[val]' type=kotlin.Any? origin=null
          WHEN type=kotlin.Int origin=null
            BRANCH
              if: CALL 'FUN IR_BUILTINS_STUB name:EQEQ visibility:public modality:FINAL <> (arg0:kotlin.Any?, arg1:kotlin.Any?) returnType:kotlin.Boolean flags:[]' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp1_notnull type:kotlin.Int? flags:[val]' type=kotlin.Int? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CALL 'FUN IR_BUILTINS_STUB name:THROW_NPE visibility:public modality:FINAL <> () returnType:kotlin.Nothing flags:[]' type=kotlin.Nothing origin=EXCLEXCL
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'VAR IR_TEMPORARY_VARIABLE name:tmp1_notnull type:kotlin.Int? flags:[val]' type=kotlin.Int? origin=null
